// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  username       String
  email          String    @unique
  password       String
  isActivated    Boolean   @default(false)
  activationLink String
  role           Role      @default(USER)
  publications   Article[]
  comments       Comment[]
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt()
  Token          Token[]
}

model Token {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  user              User     @relation(fields: [userID], references: [id])
  userID            String   @db.ObjectId
  deviceFingerprint String
  refreshToken      String
  expiresIn         DateTime
}

model Category {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  title     String    @unique
  url       String    @unique
  articles  Article[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt()
}

model Article {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  isPublished Boolean   @default(false)
  title       String
  description String?
  cover       String?
  image       String?
  articleBody String?
  author      User      @relation(fields: [authorID], references: [id])
  authorID    String    @db.ObjectId
  category    Category  @relation(fields: [categoryID], references: [id])
  categoryID  String    @db.ObjectId
  comments    Comment[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Comment {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  isPublished Boolean  @default(false)
  commentBody String
  article     Article  @relation(fields: [articleID], references: [id])
  articleID   String   @db.ObjectId
  author      User     @relation(fields: [authorID], references: [id])
  authorID    String   @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum Role {
  ADMIN
  MANAGER
  USER
}
